#set($appName=${APP.getName().toLowerCase()})
#set($appVersion=${APP.getVersion()})
#set($appFunctionName=${APP.appFunction.name.toLowerCase()})
#set($projectName=${CodeAppUtil.containerAppName($APP).toLowerCase()})
#set($projectVersion=${APP.getVersion()})
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>$projectName</artifactId>
        <groupId>$DEFAULT_GROUP_ID.value</groupId>
        <version>$projectVersion</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>$appName</artifactId>
    <version>$appVersion</version>

    <dependencies>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${admin.version}</version>
        </dependency>
        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>gode-common</artifactId>
            <version>${gode.version}</version>
        </dependency>
        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>gode-store</artifactId>
            <version>${gode.version}</version>
        </dependency>
        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>gode-api</artifactId>
            <version>${gode.version}</version>
        </dependency>
        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>gode-media</artifactId>
            <version>${gode.version}</version>
        </dependency>
        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>gode-queue</artifactId>
            <version>${gode.version}</version>
        </dependency>

        #if($APP.features.cacheRequired)
         <dependency>
             <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>gode-cache</artifactId>
            <version>${gode.version}</version>
        </dependency>
        #end

        #if(${APP.secure})
            <dependency>
                <groupId>$DEFAULT_GROUP_ID.value</groupId>
                <artifactId>gode-resource</artifactId>
                <version>${gode.version}</version>
            </dependency>
        #end

        #foreach($entity in $APP.entities)
        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>${entity.getName().toLowerCase()}</artifactId>
        </dependency>
        #end

        #foreach($dependency in $APP.dependencies)
            <dependency>
                <groupId>$DEFAULT_GROUP_ID.value</groupId>
                <artifactId>${dependency.getName().toLowerCase()}</artifactId>
            </dependency>
        #end

        #foreach($relationship in $APP.relationships)
            <dependency>
                <groupId>$DEFAULT_GROUP_ID.value</groupId>
                <artifactId>${relationship.getName().toLowerCase()}</artifactId>
            </dependency>
        #end

        <dependency>
            <groupId>$DEFAULT_GROUP_ID.value</groupId>
            <artifactId>$appFunctionName</artifactId>
        </dependency>

        #if($APP.features.jpaStoreRequired)
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        #end

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- liquibase -->
            #if($APP.features.jpaStoreRequired)
           <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <configuration>
                    <propertyFile>src/main/resources/liquibase.properties</propertyFile>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.liquibase.ext</groupId>
                        <artifactId>liquibase-hibernate5</artifactId>
                        <version>${liquibase-hibernate5.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                        <version>${spring.framework.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework.data</groupId>
                        <artifactId>spring-data-jpa</artifactId>
                        <version>${spring.jpa.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.validation</groupId>
                        <artifactId>validation-api</artifactId>
                        <version>2.0.1.Final</version>
                    </dependency>
                </dependencies>
            </plugin>
            #end
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.2</version>
                <configuration>
                    <imageName>${appName}_app_docker</imageName>
                    <baseImage>openjdk:11</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <composeFile>${project.basedir}/docker-compose.yml</composeFile>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
