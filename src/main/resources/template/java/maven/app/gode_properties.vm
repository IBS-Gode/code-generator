#set($appName=${APP.getName().toLowerCase()})
#set($appVersion=${APP.getVersion()})

#if(${APP.features.jpaStoreRequired})
#JPA
gode.datastore.jpa.enabled=true
gode.datastore.jpa.driver=com.mysql.cj.jdbc.Driver
gode.datastore.jpa.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
gode.datastore.jpa.datasource.url=jdbc\:mysql\://localhost\:3306/wynss_dev_r22
gode.datastore.jpa.datasource.username=test
gode.datastore.jpa.datasource.password=test
gode.datastore.jpa.datasource.auto-schema-management=update

#Liquibase
spring.liquibase.enabled=false
spring.liquibase.change-log=classpath:liquibase-diff-changeLog.yml
#else
gode.datastore.jpa.enabled=false
#end


#if(${APP.features.mongoRequired})
#Mongo
gode.datastore.mongodb.enabled=true
gode.datastore.mongodb.uri=mongodb://dave:password@localhost:27017/
gode.datastore.mongodb.database.name=myproject
#else
gode.datastore.mongodb.enabled=false
#end

#if(${APP.features.cassandraRequired})
gode.datastore.cassandra.enabled=true
gode.datastore.cassandra.contact-points=
gode.datastore.cassandra.port=
gode.datastore.cassandra.username=
gode.datastore.cassandra.password=
gode.datastore.cassandra.keyspace=default
gode.datastore.cassandra.schema-action=NONE
#else
gode.datastore.cassandra.enabled=false
#end


#if(${APP.features.elasticsearchRequired})
gode.datastore.elasticsearch.enabled=true
gode.datastore.elasticsearch.hosts=http://localhost:9200
gode.datastore.elasticsearch.user=
gode.datastore.elasticsearch.password=
gode.datastore.elasticsearch.cluster=
gode.datastore.elasticsearch.doctype=gode
#else
gode.datastore.elasticsearch.enabled=false
#end

#if(${APP.features.queueSystemRequired})
#QueueManagement
gode.queue.kafka.enabled=true
gode.queue.general=
gode.queue.kafka.servers=
gode.queue.kafka.groupId=
gode.queue.kafka.acknowledgement=all
gode.queue.kafka.retries=3
gode.queue.kafka.batchSizeConfig=16384
gode.queue.kafka.linger=1
gode.queue.kafka.bufferMemoryConfig=33554432
gode.queue.kafka.autoCommit=true
gode.queue.kafka.autoCommitInterval=1000
gode.queue.kafka.offsetReset=earliest
gode.queue.kafka.sesssionTimeout=30000
gode.queue.kafka.pollInterval=60
gode.queue.kafka.security.sasl=
gode.queue.kafka.security.mechanism=
gode.queue.kafka.security.jaas=
gode.queue.kafka.clientId=gode-${appName}-v.$appVersion
gode.queue.kafka.appName=${appName}
gode.queue.kafka.streamReplication=1
gode.queue.kafka.activeProcessors=1
#else
gode.queue.kafka.enabled=false
#end


#if(${APP.features.secure})
#Auth
gode.security.jwt.public-key= classpath:public.txt
gode.security.enabled=true
#else
gode.security.enabled=false
#end



#if(${APP.features.cacheRequired})
#Cache
gode.cache.ignite.enabled=true
gode.cache.ignite.name=${appName}cache
gode.cache.ignite.persistence=true
gode.cache.ignite.connector.port=11211
gode.cache.ignite.persistence.pagesize=4096
gode.cache.ignite.connector.discovery.addr=127.0.0.1:47500..47509
gode.cache.ignite.metrics.log.frequency=0
gode.cache.ignite.dataregion.size.start=100000000
gode.cache.ignite.dataregion.size.max=200000000
gode.cache.ignite.threads.pool.query=2
gode.cache.ignite.threads.pool.datastreamer=1
gode.cache.ignite.threads.pool.management=2
gode.cache.ignite.threads.pool.public=2
gode.cache.ignite.threads.pool.system=2
gode.cache.ignite.threads.pool.rebalance=1
gode.cache.ignite.threads.pool.asynccallback=2
#else
gode.cache.ignite.enabled=false
#end

server.port=

#Monitor
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

spring.application.name=${appName}-v.$appVersion
spring.boot.admin.client.url=${admin.url}
management.endpoint.logfile.external-file=./logs/${appName}.log
management.health.elasticsearch.enabled=false
